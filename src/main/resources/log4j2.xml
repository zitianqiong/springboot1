<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<!--  注：本配置文件的目标是将不同级别的日志输出到不同文件，最大2MB一个文件，
	文件数据达到最大值时，旧数据会被压缩并放进指定文件夹 -->
<Configuration status="WARN" monitorInterval="30">
	<Properties>
		<!-- 配置日志文件输出目录，此配置将日志输出到目录下的指定文件夹,防止目录遍历,末级文件夹必须为logs -->
		<Property name="LOG.PATH">./logs</Property>
		<!-- 控制台输出日志级别 -->
		<Property name="LOG.LEVEL.CONSOLE.PRINT">warn</Property>
		<Property name="LOG.LEVEL.CONSOLE.ERROR">error</Property>
		<!-- 日志输出格式 -->
		<Property name="PROJECT.NAME">springboot</Property>
		<Property name="PID">????</Property>
		<Property name="LOG_EXCEPTION_CONVERSION_WORD">%xwEx</Property>
		<Property name="LOG_LEVEL_PATTERN">%5p</Property>
		<Property name="LOG_DATEFORMAT_PATTERN">yyyy-MM-dd HH:mm:ss.SSS</Property>
		<Property name="CONSOLE_LOG_PATTERN">%clr{%d{${LOG_DATEFORMAT_PATTERN}}}{faint}%clr{${LOG_LEVEL_PATTERN}} %clr{[%5.15t]}{magenta} %clr{\(%30file:%-3line\):}{cyan} %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
		<Property name="FILE_LOG_PATTERN">%d{${LOG_DATEFORMAT_PATTERN}} ${LOG_LEVEL_PATTERN} ${sys:PID} --- [%t] %-40.40c{1.} :	%m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
	</Properties>

	<!--先定义所有的appender-->
	<Appenders>

		<!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
		<!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
		<!--输出日志的格式 %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间 %p : 日志输出格式 %c : logger的名称
			%m : 日志内容，即 logger.info("message") %n : 换行符 %C : Java类名 %L : 日志输出所在行数 %M
			: 日志输出所在方法名 -->

		<!--这个输出控制台的配置，这里输出warn和info级别的信息到System.out -->
		<Console name="console_out_appender" target="SYSTEM_OUT" follow="true">
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
			<LevelRangeFilter maxLevel="info" minLevel="${LOG.LEVEL.CONSOLE.PRINT}"
				onMatch="accept" onMismatch="deny" />
			<!-- 输出日志的格式 -->
			<PatternLayout pattern="${sys:CONSOLE_LOG_PATTERN}" />
		</Console>
		<!--这个输出控制台的配置，这里输出error级别的信息到System.err，在eclipse控制台上看到的是红色文字 -->
		<Console name="console_err_appender" target="system_err">
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
			<ThresholdFilter level="${LOG.LEVEL.CONSOLE.ERROR}"
				onMatch="accept" onMismatch="deny" />
			<!-- 输出日志的格式 -->
			<PatternLayout pattern="${sys:CONSOLE_LOG_PATTERN}" />
		</Console>

		<!-- TRACE级别日志 -->
		<!-- 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出trace级别的数据到trace.log -->
		<RollingRandomAccessFile name="trace_appender"
			immediateFlush="true"
			fileName="${LOG.PATH}/${PROJECT.NAME}-trace.log"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/trace/${PROJECT.NAME}-trace - %d{yyyy-MM-dd HH_mm_ss}.log.gz">
			<PatternLayout>
				<pattern>${sys:FILE_LOG_PATTERN}</pattern>
			</PatternLayout>
			<Policies>
				<!-- 每个日志文件最大2MB -->
				<SizeBasedTriggeringPolicy size="2MB" />
			</Policies>
			<Filters>
				<!-- 此Filter意思是，只输出debug级别的数据 -->
				<!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
				<ThresholdFilter level="debug" onMatch="deny"
					onMismatch="neutral" />
				<ThresholdFilter level="trace" onMatch="accept"
					onMismatch="deny" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- DEBUG级别日志 -->
		<!-- 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出debug级别的数据到debug.log -->
		<RollingRandomAccessFile name="debug_appender"
			immediateFlush="true"
			fileName="${LOG.PATH}/${PROJECT.NAME}-debug.log"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/debug/${PROJECT.NAME}-debug - %d{yyyy-MM-dd HH_mm_ss}.log.gz">
			<PatternLayout>
				<pattern>${sys:FILE_LOG_PATTERN}</pattern>
			</PatternLayout>
			<Policies>
				<!-- 每个日志文件最大2MB -->
				<SizeBasedTriggeringPolicy size="2MB" />

				<!-- 如果启用此配置，则日志会按文件名生成新压缩文件， 即如果filePattern配置的日期格式为 %d{yyyy-MM-dd HH}
					，则每小时生成一个压缩文件， 如果filePattern配置的日期格式为 %d{yyyy-MM-dd} ，则天生成一个压缩文件 -->
				<!--<TimeBasedTriggeringPolicy interval="1" modulate="true" /> -->
			</Policies>
			<Filters>
				<!-- 此Filter意思是，只输出debug级别的数据 -->
				<!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
				<ThresholdFilter level="info" onMatch="deny"
					onMismatch="neutral" />
				<ThresholdFilter level="debug" onMatch="accept"
					onMismatch="deny" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- INFO级别日志 -->
		<RollingRandomAccessFile name="info_appender"
			immediateFlush="true" fileName="${LOG.PATH}/${PROJECT.NAME}-info.log"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/info/${PROJECT.NAME}-info - %d{yyyy-MM-dd HH_mm_ss}.log.gz">
			<PatternLayout>
				<pattern>${sys:FILE_LOG_PATTERN}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="20MB" />
			</Policies>
			<Filters>
				<ThresholdFilter level="warn" onMatch="deny"
					onMismatch="neutral" />
				<ThresholdFilter level="info" onMatch="accept"
					onMismatch="deny" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- WARN级别日志 -->
		<RollingRandomAccessFile name="warn_appender"
			immediateFlush="true" fileName="${LOG.PATH}/${PROJECT.NAME}-warn.log"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/warn/${PROJECT.NAME}-warn - %d{yyyy-MM-dd HH_mm_ss}.log.gz">
			<PatternLayout>
				<pattern>${sys:FILE_LOG_PATTERN}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="10MB" />
			</Policies>
			<Filters>
				<ThresholdFilter level="error" onMatch="deny"
					onMismatch="neutral" />
				<ThresholdFilter level="warn" onMatch="accept"
					onMismatch="deny" />
			</Filters>
		</RollingRandomAccessFile>

		<!-- ERROR级别日志 -->
		<RollingRandomAccessFile name="error_appender"
			immediateFlush="true"
			fileName="${LOG.PATH}/${PROJECT.NAME}-error.log"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/error/${PROJECT.NAME}-error - %d{yyyy-MM-dd HH_mm_ss}.log.gz">
			<PatternLayout>
				<pattern>${sys:FILE_LOG_PATTERN}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="2MB" />
			</Policies>
			<Filters>
				<ThresholdFilter level="error" onMatch="accept"
					onMismatch="deny" />
			</Filters>
		</RollingRandomAccessFile>


		<RollingFile name="monitor"
			fileName="${LOG.PATH}/${PROJECT.NAME}-monitor.log" append="true"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/monitor/${PROJECT.NAME}-monitor-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="debug" />
			<PatternLayout pattern="${sys:FILE_LOG_PATTERN}" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="10 MB" />
			</Policies>
		</RollingFile>

		<RollingFile name="accessLogger"
			fileName="${LOG.PATH}/${PROJECT.NAME}-smon-accessLogger.log"
			append="true"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/smon/${PROJECT.NAME}-smon-accessLogger-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="debug" />
			<PatternLayout pattern="${sys:FILE_LOG_PATTERN}" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="10 MB" />
			</Policies>
		</RollingFile>

		<!--用于配置慢SQL的输出 -->
		<RollingFile name="slowSQL"
			fileName="${LOG.PATH}/${PROJECT.NAME}-slowSQL.log" append="true"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/slowSQL/${PROJECT.NAME}-slowSQL-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" />
			<PatternLayout pattern="${sys:FILE_LOG_PATTERN}" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="10 MB" />
			</Policies>
		</RollingFile>

		<!-- CSRF过滤器输出日志 -->
		<RollingFile name="csrfLogger"
			fileName="${LOG.PATH}/${PROJECT.NAME}-csrfLogger.log" append="true"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/csrfLogger/${PROJECT.NAME}-csrfLogger-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" />
			<PatternLayout pattern="${sys:FILE_LOG_PATTERN}" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="10 MB" />
			</Policies>
		</RollingFile>

		<!-- 定时任务过滤器 -->
		<RollingFile name="jobLogger"
			fileName="${LOG.PATH}/${PROJECT.NAME}-jobLogger.log" append="true"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/jobLogger/${PROJECT.NAME}-jobLogger %d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="info" />
			<PatternLayout
				pattern="%5p %d{yyyy-MM-dd HH:mm:ss} (%F:%L) %m%n" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="10 MB" />
			</Policies>
		</RollingFile>

		<!-- 代码合并日志 -->
		<RollingFile name="mergeLogger"
			fileName="${LOG.PATH}/${PROJECT.NAME}-mergeLogger.log" append="true"
			immediateFlush="true"
			filePattern="${LOG.PATH}/${PROJECT.NAME}/mergeLogger/${PROJECT.NAME}-mergeLogger %d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="debug" />
			<PatternLayout
				pattern="%5p %d{yyyy-MM-dd HH:mm:ss} %m%n" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="50 MB" />
			</Policies>
		</RollingFile>

	</Appenders>

	<Loggers>
		<!-- 配置日志的根节点 -->
		<Root level="debug">
			<AppenderRef ref="console_out_appender" />
			<AppenderRef ref="console_err_appender" />
			<AppenderRef ref="trace_appender" />
			<AppenderRef ref="debug_appender" />
			<AppenderRef ref="info_appender" />
			<AppenderRef ref="warn_appender" />
			<AppenderRef ref="error_appender" />
		</Root>

		<!-- 第三方日志系统 -->
		<Logger name="org.springframework" level="debug" />
		<logger name="org.springframework.core" level="info" />
		<logger name="org.springframework.beans" level="info" />
		<logger name="org.springframework.context" level="info" />
		<logger name="org.springframework.web" level="info" />
		<Logger name="org.jboss.netty" level="warn" />
		<Logger name="org.apache.http" level="warn" />
		<Logger name="org.jasig" level="info" />
		<Logger name="org.hibernate" level="error" />
		<logger name="org.mybatis" level="INFO" />
		<logger name="com.alibaba.druid" level="info" />
		<Logger name="com.mongodb" level="debug" />
		<Logger name="com.sgcc" level="debug" />
		<Logger name="com.sgcc.isc" level="debug" />
		<Logger name="org.jasig" level="debug" />

		<!-- 系统监控日志配置 -->
		<Logger name="accessLogger" level="debug" additivity="false">
			<AppenderRef ref="accessLogger" />
		</Logger>
		<Logger name="com.alibaba.druid.filter.stat" level="error" additivity="false">
			<AppenderRef ref="slowSQL" />
		</Logger>
	</Loggers>
</Configuration>
